<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Regression on </title>
    <link>http://localhost:1313/tags/regression/</link>
    <description>Recent content in Regression on </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Apr 2024 20:45:19 -0300</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/regression/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gradient Boost for Classification - Explained</title>
      <link>http://localhost:1313/posts/classical_ml/gradient_boosting_classification/</link>
      <pubDate>Sun, 14 Apr 2024 20:45:19 -0300</pubDate>
      <guid>http://localhost:1313/posts/classical_ml/gradient_boosting_classification/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Gradient Boosting is an &lt;a href=&#34;http://localhost:1313/posts/ml_concepts/ensemble/&#34;&gt;ensemble&lt;/a&gt; machine learning model, that - as the name suggests - is based on &lt;a href=&#34;http://localhost:1313/posts/ml_concepts/ensemble/#boosting&#34;&gt;boosting&lt;/a&gt;. An ensemble model based on boosting refers to a model that sequentially builds models, and the new model depends on the previous model. In Gradient Boosting these models are built such that they improve the error of the previous model. These individual models are so-called weak learners, which means they have low predictive skills. The ensemble of these weak learners builds the final model, which is a strong learner with a high predictive skill. In this post, we go through the algorithm of Gradient Boosting in general and then concretize the individual steps for a classification task using &lt;a href=&#34;http://localhost:1313/posts/classical_ml/decision_trees/&#34;&gt;Decision Trees&lt;/a&gt; as weak learners and the log-loss function. There will be some overlapping with the article &lt;a href=&#34;http://localhost:1313/posts/classical_ml/gradient_boosting_regression/&#34;&gt;Gradient Boosting for Regression - Explained&lt;/a&gt;, where a detailed explanation of Gradient Boosting is given, which is then applied to a regression problem. However, in this article, do not go into the details of the general formulation, for that please refer to the previously mentioned post. If you are interested in a concrete example with detailed calculations, please refer to &lt;a href=&#34;http://localhost:1313/posts/classical_ml/gradient_boosting_regression_example/&#34;&gt;Gradient Boosting for Regression - Example&lt;/a&gt; for a regression problem and &lt;a href=&#34;http://localhost:1313/posts/classical_ml/gradient_boosting_classification_example/&#34;&gt;Gradient Boosting for Classification - Example&lt;/a&gt; for a classification problem.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gradient Boost for Regression - Example</title>
      <link>http://localhost:1313/posts/classical_ml/gradient_boosting_regression_example/</link>
      <pubDate>Tue, 09 Apr 2024 22:55:13 -0300</pubDate>
      <guid>http://localhost:1313/posts/classical_ml/gradient_boosting_regression_example/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In this post, we will go through the development of a Gradient Boosting model for a regression problem, considering a simplified example. We calculate the individual steps in detail, which are defined and explained in the separate post &lt;a href=&#34;http://localhost:1313/posts/classical_ml/gradient_boosting_regression/&#34;&gt;Gradient Boost for Regression - Explained&lt;/a&gt;. Please refer to this post for a more general and detailed explanation of the algorithm.&lt;/p&gt;&#xA;&lt;h2 id=&#34;data&#34;&gt;Data&lt;/h2&gt;&#xA;&lt;p&gt;We will use a simplified dataset consisting of only 10 samples, which describes how many meters a person has climbed, depending on their age, whether they like height, and whether they like goats. We used that same data in previous posts, such as &lt;a href=&#34;http://localhost:1313/posts/classical_ml/decision_tree_regression_example/&#34;&gt;Decision Trees for Regression - Example&lt;/a&gt;, and &lt;a href=&#34;http://localhost:1313/posts/classical_ml/adaboost_example_reg/&#34;&gt;Adaboost for Regression - Example&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gradient Boost for Regression - Explained</title>
      <link>http://localhost:1313/posts/classical_ml/gradient_boosting_regression/</link>
      <pubDate>Wed, 31 Jan 2024 09:21:46 -0300</pubDate>
      <guid>http://localhost:1313/posts/classical_ml/gradient_boosting_regression/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;&lt;em&gt;Gradient Boosting&lt;/em&gt;, also called &lt;em&gt;Gradient Boosting Machine (GBM)&lt;/em&gt; is a type of &lt;a href=&#34;http://localhost:1313/posts/ml_concepts/supervised_unsupervised/#supervised&#34;&gt;supervised&lt;/a&gt; Machine Learning algorithm that is based on &lt;a href=&#34;http://localhost:1313/posts/ml_concepts/ensemble/&#34;&gt;ensemble learning&lt;/a&gt;. It consists of a sequential series of models, each one trying to improve the errors of the previous one. It can be used for both regression and classification tasks. In this post, we introduce the algorithm and then explain it in detail for a regression task. We will look at the general formulation of the algorithm and then derive and simplify the individual steps for the most common use case, which uses Decision Trees as underlying models and a variation of the &lt;a href=&#34;http://localhost:1313/posts/ml_concepts/regression_metrics/#metrics&#34;&gt;Mean Squared Error (MSE)&lt;/a&gt; as loss function. Please find a detailed example, where this is applied to a specific dataset in the separate article &lt;a href=&#34;http://localhost:1313/posts/classical_ml/gradient_boosting_regression_example/&#34;&gt;Gradient Boosting for Regression - Example&lt;/a&gt;. Gradient Boosting can also be applied for classification tasks. This is covered in the articles &lt;a href=&#34;http://localhost:1313/posts/classical_ml/gradient_boosting_classification/&#34;&gt;Gradient Boosting for Classification - Explained&lt;/a&gt; and &lt;a href=&#34;http://localhost:1313/posts/classical_ml/gradient_boosting_classification_example/&#34;&gt;Gradient Boosting for Classification - Example&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Adaboost for Regression - Example</title>
      <link>http://localhost:1313/posts/classical_ml/adaboost_example_reg/</link>
      <pubDate>Fri, 19 Jan 2024 23:05:44 -0300</pubDate>
      <guid>http://localhost:1313/posts/classical_ml/adaboost_example_reg/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;AdaBoost is an ensemble model that sequentially builds new models based on the errors of the previous model to improve the predictions. The most common case is to use Decision Trees as base models. Very often the examples explained are for classification tasks. AdaBoost can, however, also be used for regression problems. This is what we will focus on in this post. This article covers the detailed calculations of a simplified example. For a general explanation of the algorithm, please refer to &lt;a href=&#34;http://localhost:1313/posts/classical_ml/adaboost/&#34;&gt;AdaBoost - Explained&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>AdaBoost - Explained</title>
      <link>http://localhost:1313/posts/classical_ml/adaboost/</link>
      <pubDate>Sun, 14 Jan 2024 09:22:00 -0300</pubDate>
      <guid>http://localhost:1313/posts/classical_ml/adaboost/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;AdaBoost is an example of an &lt;a href=&#34;http://localhost:1313/posts/ml_concepts/ensemble/&#34;&gt;ensemble&lt;/a&gt; &lt;a href=&#34;http://localhost:1313/posts/ml_concepts/supervised_unsupervised/#supervised&#34;&gt;supervised&lt;/a&gt; Machine Learning model. It consists of a sequential series of models, each one focussing on the errors of the previous one, trying to improve them. The most common underlying model is the &lt;a href=&#34;http://localhost:1313/posts/classical_ml/decision_trees/&#34;&gt;Decision Tree&lt;/a&gt;, other models are however possible. In this post, we will introduce the algorithm of AdaBoost and have a look at a simplified example for a classification task using &lt;a href=&#34;https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.AdaBoostClassifier.html&#34;&gt;sklearn&lt;/a&gt;. For a more detailed exploration of this example - deriving it by hand - please refer to &lt;a href=&#34;http://localhost:1313/posts/classical_ml/adaboost_example_clf/&#34;&gt;AdaBoost for Classification - Example&lt;/a&gt;. A more realistic example with a larger dataset is provided on &lt;a href=&#34;https://www.kaggle.com/pumalin/adaboost-tutorial&#34;&gt;kaggle&lt;/a&gt;. Accordingly, if you are interested in how AdaBoost is developed for a regression task, please check the article &lt;a href=&#34;http://localhost:1313/posts/classical_ml/adaboost_example_reg/&#34;&gt;AdaBoost for Regression - Example&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ensemble Models - Illustrated</title>
      <link>http://localhost:1313/posts/ml_concepts/ensemble/</link>
      <pubDate>Tue, 26 Dec 2023 11:24:29 +0100</pubDate>
      <guid>http://localhost:1313/posts/ml_concepts/ensemble/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In &lt;em&gt;Ensemble Learning&lt;/em&gt; multiple Machine Learning models are combined into one single prediction to improve the predictive skill. The individual models can be of different types or the same. Ensemble learning is based on &lt;a href=&#34;https://en.wikipedia.org/wiki/The_Wisdom_of_Crowds&#34;&gt;&amp;ldquo;the wisdom of the crowds&amp;rdquo;&lt;/a&gt;, which assumes that the expected value of multiple estimates is more accurate than a single estimate. Ensemble learning can be used for regression or classification tasks. Three main types of Ensemble Learning method are most common.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Random Forests - Explained</title>
      <link>http://localhost:1313/posts/classical_ml/random_forest/</link>
      <pubDate>Tue, 26 Dec 2023 10:57:13 +0100</pubDate>
      <guid>http://localhost:1313/posts/classical_ml/random_forest/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;A Random Forest is a &lt;a href=&#34;http://localhost:1313/posts/ml_concepts/supervised_unsupervised/#supervised&#34;&gt;supervised&lt;/a&gt; Machine Learning model, that is built on Decision Trees. To understand how a Random Forest works, you should be familiar with Decision Trees. You can find an introduction in the separate article &lt;a href=&#34;http://localhost:1313/posts/classical_ml/decision_trees/&#34;&gt;Decision Trees - Explained&lt;/a&gt;. A major disadvantage of Decision Trees is that they tend to overfit and often have difficulties to generalize to new data. Random Forests try to overcome this weakness. They are built of a set of Decision Trees, which are combined into an ensemble model, and their outcomes are converted into a single result. As Decision Trees, they can be used for classification and regression tasks.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Decision Trees for Regression - Example</title>
      <link>http://localhost:1313/posts/classical_ml/decision_tree_regression_example/</link>
      <pubDate>Tue, 19 Dec 2023 17:46:29 +0100</pubDate>
      <guid>http://localhost:1313/posts/classical_ml/decision_tree_regression_example/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;A Decision Tree is a simple Machine Learning model that can be used for both regression and classification tasks. In the article &lt;a href=&#34;http://localhost:1313/posts/classical_ml/decision_tree_classification_example/&#34;&gt;Decision Trees for Classification - Example&lt;/a&gt; a Decision Tree for a classification problem is developed in detail. In this post, we consider a regression problem and build a Decision Tree step by step for a simplified dataset. Additionally, we use &lt;a href=&#34;https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeRegressor.html&#34;&gt;sklearn&lt;/a&gt; to fit a model to the data and compare the results. To learn about Decision Trees in a more general setup, please refer to &lt;a href=&#34;http://localhost:1313/posts/classical_ml/decision_trees/&#34;&gt;Decision Trees - Explained&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Decision Trees - Explained</title>
      <link>http://localhost:1313/posts/classical_ml/decision_trees/</link>
      <pubDate>Sat, 16 Dec 2023 12:33:55 +0100</pubDate>
      <guid>http://localhost:1313/posts/classical_ml/decision_trees/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;A &lt;em&gt;Decision Tree&lt;/em&gt; is a &lt;a href=&#34;http://localhost:1313/posts/ml_concepts/supervised_unsupervised/#supervised&#34;&gt;supervised Machine Learning&lt;/a&gt; algorithm that can be used for both regression and classification problems. It is a non-parametric model, which means there is no specific mathematical function underlying to fit the data (in contrast to e.g. &lt;a href=&#34;http://localhost:1313/posts/classical_ml/linear_regression/&#34;&gt;Linear Regression&lt;/a&gt; or &lt;a href=&#34;http://localhost:1313/posts/classical_ml/logistic_regression/&#34;&gt;Logistic Regression&lt;/a&gt;), but the algorithm only learns from the data itself. Decision Trees learn rules for decision making and used to be drawn manually before Machine Learning came up. They are hierarchical models, that have a flow-chart tree structure as the name suggests.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Feature Selection Methods</title>
      <link>http://localhost:1313/posts/ml_concepts/feature_selection/</link>
      <pubDate>Mon, 11 Dec 2023 22:56:54 +0100</pubDate>
      <guid>http://localhost:1313/posts/ml_concepts/feature_selection/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;&lt;em&gt;Feature Selection&lt;/em&gt; is the process of determining the most suitable subset of the total number of available features for modeling. It helps to understand which features contribute most to the target data. This is usefull to&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Improve Model Performance.&lt;/strong&gt; Redundant and irrelevant features may be misleading for the model. Additionally, if the feature space is too large compared to the sample size. This is called the &lt;a href=&#34;https://en.wikipedia.org/wiki/Curse_of_dimensionality&#34;&gt;curse of dimensionality&lt;/a&gt; and may reduce the model&amp;rsquo;s performance.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linear Regression - Analytical Solution and Simplified Example</title>
      <link>http://localhost:1313/posts/classical_ml/linear_regression_example/</link>
      <pubDate>Thu, 23 Nov 2023 11:00:02 +0100</pubDate>
      <guid>http://localhost:1313/posts/classical_ml/linear_regression_example/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In a previous article, we introduced &lt;a href=&#34;http://localhost:1313/posts/classical_ml/linear_regression/&#34; title=&#34;Linear Regression&#34;&gt;Linear Regression&lt;/a&gt; in detail and more generally, showed how to find the best model and discussed its chances and limitations. In this post, we are looking at a concrete example. We are going to calculate the &lt;em&gt;slope&lt;/em&gt; and the &lt;em&gt;intercept&lt;/em&gt; from a Simple Linear Regression analytically, looking at the example data provided in the next plot.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20231001_regression_metrics/regression_example.jpg&#34; alt=&#34;regression example&#34;&gt;&#xA;&lt;em&gt;Illustration of a simple linear regression between the body mass and the maximal running speed of an animal.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linear Regression - Explained</title>
      <link>http://localhost:1313/posts/classical_ml/linear_regression/</link>
      <pubDate>Mon, 13 Nov 2023 21:20:41 +0100</pubDate>
      <guid>http://localhost:1313/posts/classical_ml/linear_regression/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Linear Regression is a type of &lt;a href=&#34;http://localhost:1313/posts/ml_concepts/supervised_unsupervised/#supervised&#34; title=&#34;Supervised Machine Learning&#34;&gt;Supervised Machine Learning&lt;/a&gt; Algorithm, where a linear relationship between the input feature(s) and the target value is assumed. Linear Regression is a specific type of regression model, where the mapping learned by the model describes a linear function. As in all regression tasks, the target variable is continuous. In a linear regression, the linear relationship between one (&lt;a href=&#34;#slr&#34;&gt;Simple Linear Regression&lt;/a&gt;) or more (&lt;a href=&#34;#mrl&#34;&gt;Multiple Linear Regression&lt;/a&gt;) independent variable and one dependent variable is modeled.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Metrics for Regression Problems</title>
      <link>http://localhost:1313/posts/ml_concepts/regression_metrics/</link>
      <pubDate>Sat, 30 Sep 2023 21:24:12 +0200</pubDate>
      <guid>http://localhost:1313/posts/ml_concepts/regression_metrics/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20231001_regression_metrics/regression_metrics.jpg&#34; alt=&#34;regression metrics&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;regression-problems&#34;&gt;Regression Problems&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Regression_analysis&#34;&gt;Regression&lt;/a&gt; problems in Machine Learning are a type of supervised learning problem, where a continuous numerical variable is predicted, such as, for example, the age of a person or the price of a product. A special type is the &lt;a href=&#34;http://localhost:1313/posts/classical_ml/linear_regression/&#34; title=&#34;Linear Regression&#34;&gt;Linear Regression&lt;/a&gt;, where a linear relationship between two (&lt;a href=&#34;http://localhost:1313/posts/classical_ml/linear_regression/#slr&#34; title=&#34;Linear Regression&#34;&gt;Simple Linear Regression&lt;/a&gt; or more (&lt;a href=&#34;http://localhost:1313/posts/classical_ml/linear_regression/#mlr&#34; title=&#34;Linear Regression&#34;&gt;Multiple Linear Regression&lt;/a&gt;) is analyzed. The example plots in this article will be illustrated with a simple linear regression. However the metrics introduced here are common metrics for all types of regression problems, including multiple linear regression and non-linear regression. The simple linear regression is only chosen for illustration purposes.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
